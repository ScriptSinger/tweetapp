services:
  php:
    build:
      context: ./php
      dockerfile: php.dockerfile
      args:
        UID: ${UID:-1000}
        GID: ${GID:-1000}

    volumes:
      - ../backend:/var/www/html

    depends_on:
      - mysql
      - redis

  composer:
    build:
      context: ./composer
      dockerfile: composer.dockerfile
      args:
        UID: ${UID:-1000}
        GID: ${GID:-1000}

    volumes:
      - ../backend:/var/www/html

    working_dir: /var/www/html

  nginx:
    image: nginx:latest

    ports:
      - "80:80"
    volumes:
      - ./nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf

      - ../backend/public:/var/www/html/public # Подключаем публичную папку Laravel

    depends_on:
      - php
      - redis

  mysql:
    image: mysql:latest

    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: "${DB_DATABASE}"
      MYSQL_USER: "${DB_USERNAME}"
      MYSQL_PASSWORD: "${DB_PASSWORD}"
      MYSQL_ROOT_PASSWORD: "${DB_PASSWORD}"

    healthcheck:
      test:
        - CMD
        - mysqladmin
        - ping
      retries: 3
      timeout: 5s

    volumes:
      - mysql_data:/var/lib/mysql

  redis:
    image: redis:latest
    ports:
      - "6379:6379"

    volumes:
      - redis_data:/data
  worker:
    build:
      context: ./php
      dockerfile: php.dockerfile

    volumes:
      - ../backend:/var/www/html

    depends_on:
      mysql:
        condition: service_healthy # Ожидаем, пока MySQL не станет здоровым

    # restart: always
    command: php artisan queue:work --verbose --tries=3 --timeout=90

  reverb:
    build:
      context: ./php
      dockerfile: php.dockerfile

    volumes:
      - ../backend:/var/www/html

    depends_on:
      mysql:
        condition: service_healthy # Ожидаем, пока MySQL не станет здоровым

    working_dir: /var/www/html
    command:
      ["php", "/var/www/html/artisan", "--port=8080", --debug, "reverb:start"]

    ports:
      - "8080:8080" # Прокидываем порт для WebSocket

volumes:
  mysql_data:
  redis_data:
