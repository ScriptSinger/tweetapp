name: Backend

on:
  push:
    branches:
      - feature/backend/ci
  workflow_dispatch:

env:
  DB_DATABASE: ${{ secrets.DB_DATABASE }}
  DB_USERNAME: ${{ secrets.DB_USERNAME }}
  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}

jobs:
  build:
    name: 📦 Laravel Build
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout репозитория
        uses: actions/checkout@v4

      - name: 🔐 Docker Login to GHCR
        run: echo "${{ secrets.CR_PAT }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin

      - name: 📝 Создать .env и записать секреты
        working-directory: backend
        run: |
          cp .env.example .env
          echo "DB_DATABASE=${DB_DATABASE}" >> .env
          echo "DB_USERNAME=${DB_USERNAME}" >> .env
          echo "DB_PASSWORD=${DB_PASSWORD}" >> .env

      - name: 🧑‍💻 Export runner UID/GID
        run: |
          echo "UID=$(id -u)" >> $GITHUB_ENV
          echo "GID=$(id -g)" >> $GITHUB_ENV

      - name: 🔧 Сборка Docker-контейнеров
        working-directory: deployment
        run: |
          docker compose build \
            --build-arg UID=$UID \
            --build-arg GID=$GID

      - name: 🚀 Laravel build внутри контейнера
        working-directory: deployment
        run: |
          docker compose up -d
          docker compose run --rm composer composer install --no-dev --optimize-autoloader
          docker compose run --rm composer php artisan config:cache
          docker compose run --rm composer php artisan route:cache
          docker compose run --rm composer php artisan view:cache
