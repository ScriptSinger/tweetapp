name: Backend

on:
  push:
    branches:
      - feature/backend/ci
  workflow_dispatch:

env:
  DB_DATABASE: ${{ secrets.DB_DATABASE }}
  DB_USERNAME: ${{ secrets.DB_USERNAME }}
  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}

jobs:
  build:
    name: üì¶ Laravel Build
    runs-on: ubuntu-latest

    steps:
      - name: üì• Checkout —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
        uses: actions/checkout@v4

      - name: üîê Docker Login to GHCR
        run: echo "${{ secrets.CR_PAT }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin

      - name: üìù –°–æ–∑–¥–∞—Ç—å .env –∏ –∑–∞–ø–∏—Å–∞—Ç—å —Å–µ–∫—Ä–µ—Ç—ã
        working-directory: backend
        run: |
          cp .env.example .env
          echo "DB_DATABASE=${DB_DATABASE}" >> .env
          echo "DB_USERNAME=${DB_USERNAME}" >> .env
          echo "DB_PASSWORD=${DB_PASSWORD}" >> .env

      - name: üßë‚Äçüíª Export runner UID/GID
        run: |
          echo "UID=$(id -u)" >> $GITHUB_ENV
          echo "GID=$(id -g)" >> $GITHUB_ENV

      - name: üîß –°–±–æ—Ä–∫–∞ Docker-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
        working-directory: deployment
        run: |
          docker compose build \
            --build-arg UID=$UID \
            --build-arg GID=$GID

      - name: üöÄ Laravel build –≤–Ω—É—Ç—Ä–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
        working-directory: deployment
        run: |
          docker compose up -d
          docker compose run --rm composer composer install --no-dev --optimize-autoloader
          docker compose run --rm composer php artisan config:cache
          docker compose run --rm composer php artisan route:cache
          docker compose run --rm composer php artisan view:cache

      - name: üê≥ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ–±—Ä–∞–∑—ã –ø–æ—Å–ª–µ —Å–±–æ—Ä–∫–∏
        run: docker image ls

      - name: üì¶ –ü—É–±–ª–∏–∫–∞—Ü–∏—è PHP-–æ–±—Ä–∞–∑–∞ –≤ GHCR
        working-directory: deployment
        run: |
          OWNER_LC=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          PHP_IMAGE="ghcr.io/${OWNER_LC}/deployment-php"

          docker tag deployment-php $PHP_IMAGE:latest
          docker tag deployment-php $PHP_IMAGE:${{ github.sha }}

          docker push $PHP_IMAGE:latest
          docker push $PHP_IMAGE:${{ github.sha }}

  deployment:
    name: Laravel Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Setup SSH and test connection
        run: |
          echo "üîê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ SSH –∫–ª—é—á–∞..."
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519

          echo "üì• –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —É–¥–∞–ª—ë–Ω–Ω–æ–≥–æ —Ö–æ—Å—Ç–∞ –≤ known_hosts..."
          ssh-keyscan -H "${{ secrets.REMOTE_HOST }}" >> ~/.ssh/known_hosts

          echo "üöÄ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }}"
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_ed25519 \
              ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} \
              "echo '‚úÖ SSH —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ'"