name: CI Pipeline

on:
  push:
    branches:
      - "**"

  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Export runner UID/GID
        run: |
          echo "UID=$(id -u)" >> $GITHUB_ENV
          echo "GID=$(id -g)" >> $GITHUB_ENV

      - name: Build all containers
        working-directory: deployment
        run: |
          docker compose build \
            --build-arg UID=$UID \
            --build-arg GID=$GID

      - name: Start all containers in background
        working-directory: deployment
        run: docker compose up -d

      - name: Wait for containers to initialize
        run: sleep 20

      - name: pwd
        run: |
          pwd
          ls -la
          whoami

      - name: Ensure bootstrap/cache exists
        run: mkdir -p backend/bootstrap/cache

      - name: Copy .env
        run: cp backend/.env.example backend/.env

      - name: Install backend dependencies (Composer)
        working-directory: deployment
        run: docker compose run --rm composer install --no-interaction --prefer-dist --optimize-autoloader

      - name: Generate APP_KEY
        working-directory: deployment
        run: docker compose exec -T php php artisan key:generate

      - name: Run Laravel migrations
        working-directory: deployment
        run: docker compose exec -T php php artisan migrate --force

      - name: Run Laravel PHPUnit tests
        working-directory: deployment
        run: docker compose exec -T php ./vendor/bin/phpunit

      - name: PHP Lint & Static Analysis
        working-directory: deployment
        run: |
          docker compose exec -T php ./vendor/bin/pint --test
          docker compose exec -T php ./vendor/bin/phpstan analyse --memory-limit=512M

      - name: Install frontend dependencies
        working-directory: deployment
        run: docker compose exec -T frontend npm ci

      - name: Run frontend Vitest unit tests
        working-directory: deployment
        run: docker compose exec -T frontend npm run test:unit

      # - name: Run Cypress e2e tests (headless)
      #   working-directory: deployment
      #   run: |
      #     docker compose exec -T frontend npx cypress install
      #     docker compose exec -T frontend npx cypress run

      - name: Stop and remove containers
        working-directory: deployment
        if: always()
        run: docker compose down -v
