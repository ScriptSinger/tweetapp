name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: deployment

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Export runner UID/GID
        run: |
          echo "UID=$(id -u)" >> $GITHUB_ENV
          echo "GID=$(id -g)" >> $GITHUB_ENV

      - name: Build all containers
        run: |
          docker compose build \
            --build-arg UID=$UID \
            --build-arg GID=$GID

      - name: Start all containers in background
        run: docker compose up -d

      - name: Wait for containers to initialize
        run: sleep 20

      - name: Install backend dependencies (Composer)
        run: docker compose run --rm -e UID=$UID -e GID=$GID composer install --no-interaction --prefer-dist --optimize-autoloader

      - name: Run Laravel migrations
        run: docker compose exec -T php php artisan migrate --force

      - name: Run Laravel PHPUnit tests
        run: docker compose exec -T php ./vendor/bin/phpunit

      - name: Install frontend dependencies
        working-directory: ../frontend
        run: npm ci

      - name: Run frontend Vitest unit tests
        working-directory: ../frontend
        run: npm run test

      - name: Run Cypress e2e tests (headless)
        working-directory: ../frontend
        run: |
          npx cypress install
          npx cypress run

      - name: Stop and remove containers
        if: always()
        run: docker compose down -v
